{"version":3,"file":"3642.js","mappings":"8IAAA,stD","sources":["file:///C:\\0-E\\Code Store\\monaco-editor\\website\\src\\website\\data\\playground-samples\\customizing-the-appearence\\tokens-and-colors\\sample.js"],"sourcesContent":["export default \"// Theme matching (i.e. applying a style to a token) happens in JavaScript.\\r\\n// We must therefore register the theme rules in JavaScript.\\r\\n\\r\\n// A custom theme must name its base theme (i.e. 'vs', 'vs-dark' or 'hc-black')\\r\\n// It can then choose to inherit the rules from the base theme or not\\r\\n// A rule token matching is prefix based: e.g.\\r\\n//  - string will match a token with type: string, string.double.js or string.html\\r\\n//  - string.double will match a token with type string.double but will not match string or string.html\\r\\n\\r\\n// !!! Tokens can be inspected using F1 > Developer: Inspect Tokens !!!\\r\\n\\r\\nmonaco.editor.defineTheme(\\\"myCustomTheme\\\", {\\r\\n\\tbase: \\\"vs\\\", // can also be vs-dark or hc-black\\r\\n\\tinherit: true, // can also be false to completely replace the builtin rules\\r\\n\\trules: [\\r\\n\\t\\t{\\r\\n\\t\\t\\ttoken: \\\"comment\\\",\\r\\n\\t\\t\\tforeground: \\\"ffa500\\\",\\r\\n\\t\\t\\tfontStyle: \\\"italic underline\\\",\\r\\n\\t\\t},\\r\\n\\t\\t{ token: \\\"comment.js\\\", foreground: \\\"008800\\\", fontStyle: \\\"bold\\\" },\\r\\n\\t\\t{ token: \\\"comment.css\\\", foreground: \\\"0000ff\\\" }, // will inherit fontStyle from `comment` above\\r\\n\\t],\\r\\n\\tcolors: {\\r\\n\\t\\t\\\"editor.foreground\\\": \\\"#000000\\\",\\r\\n\\t},\\r\\n});\\r\\n\\r\\nmonaco.editor.create(document.getElementById(\\\"container\\\"), {\\r\\n\\tvalue: getCode(),\\r\\n\\tlanguage: \\\"text/html\\\",\\r\\n\\ttheme: \\\"myCustomTheme\\\",\\r\\n});\\r\\n\\r\\nfunction getCode() {\\r\\n\\treturn (\\r\\n\\t\\t'<html><!-- // !!! Tokens can be inspected using F1 > Developer: Inspect Tokens !!! -->\\\\n<head>\\\\n\\t<!-- HTML comment -->\\\\n\\t<style type=\\\"text/css\\\">\\\\n\\t\\t/* CSS comment */\\\\n\\t</style>\\\\n\\t<script type=\\\"javascript\\\">\\\\n\\t\\t// JavaScript comment\\\\n\\t</' +\\r\\n\\t\\t\\\"script>\\\\n</head>\\\\n<body></body>\\\\n</html>\\\"\\r\\n\\t);\\r\\n}\\r\\n\";"],"names":[],"sourceRoot":""}