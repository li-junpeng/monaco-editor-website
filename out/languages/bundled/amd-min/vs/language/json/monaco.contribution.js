/*! For license information please see monaco.contribution.js.LICENSE.txt */
"use strict";define("vs/language/json/monaco.contribution",["require","require","vs/editor/editor.api"],(e=>(()=>{var t,n,o=Object.create,s=Object.defineProperty,i=Object.getOwnPropertyDescriptor,r=Object.getOwnPropertyNames,a=Object.getPrototypeOf,g=Object.prototype.hasOwnProperty,u=(t=function(t){if(void 0!==e)return e.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')},void 0!==e?e:"undefined"!=typeof Proxy?new Proxy(t,{get:(t,n)=>(void 0!==e?e:t)[n]}):t),c=(e,t,n,o)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let a of r(t))!g.call(e,a)&&a!==n&&s(e,a,{get:()=>t[a],enumerable:!(o=i(t,a))||o.enumerable});return e},d=(e,t,n)=>(n=null!=e?o(a(e)):{},c(!t&&e&&e.__esModule?n:s(n,"default",{value:e,enumerable:!0}),e)),l=()=>{return n||(e=n={exports:{}},t=d(u("vs/editor/editor.api")),e.exports=t),n.exports;var e,t},m={};((e,t)=>{for(var n in t)s(e,n,{get:t[n],enumerable:!0})})(m,{jsonDefaults:()=>h});var p={};((e,t,n)=>{c(e,t,"default")})(p,d(l()));var h=new class{_onDidChange=new p.Emitter;_diagnosticsOptions;_modeConfiguration;_languageId;constructor(e,t,n){this._languageId=e,this.setDiagnosticsOptions(t),this.setModeConfiguration(n)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get modeConfiguration(){return this._modeConfiguration}get diagnosticsOptions(){return this._diagnosticsOptions}setDiagnosticsOptions(e){this._diagnosticsOptions=e||Object.create(null),this._onDidChange.fire(this)}setModeConfiguration(e){this._modeConfiguration=e||Object.create(null),this._onDidChange.fire(this)}}("json",{validate:!0,allowComments:!0,schemas:[],enableSchemaRequest:!1,schemaRequest:"warning",schemaValidation:"warning",comments:"error",trailingCommas:"error"},{documentFormattingEdits:!0,documentRangeFormattingEdits:!0,completionItems:!0,hovers:!0,documentSymbols:!0,tokens:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0});return p.languages.json={jsonDefaults:h},p.languages.register({id:"json",extensions:[".json",".bowerrc",".jshintrc",".jscsrc",".eslintrc",".babelrc",".har"],aliases:["JSON","json"],mimetypes:["application/json"]}),p.languages.onLanguage("json",(()=>{new Promise(((e,t)=>{u(["vs/language/json/jsonMode"],e,t)})).then((e=>e.setupMode(h)))})),(e=>c(s({},"__esModule",{value:!0}),e))(m)})()));