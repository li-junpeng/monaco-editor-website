{"version":3,"file":"6983.js","mappings":"8IAAA,2oB","sources":["file:///C:\\0-E\\Code Store\\monaco-editor\\website\\src\\website\\data\\home-samples\\sample.cameligo.txt"],"sourcesContent":["export default \"type storage = int\\r\\ntype parameter =\\r\\n  Increment of int\\r\\n| Decrement of int\\r\\n| Reset\\r\\ntype return = operation list * storage\\r\\n// Two entrypoints\\r\\nlet add (store, delta : storage * int) : storage = store + delta\\r\\nlet sub (store, delta : storage * int) : storage = store - delta\\r\\n(* Main access point that dispatches to the entrypoints according to\\r\\n   the smart contract parameter. *)\\r\\nlet main (action, store : parameter * storage) : return =\\r\\n ([] : operation list),    // No operations\\r\\n (match action with\\r\\n   Increment (n) -> add (store, n)\\r\\n | Decrement (n) -> sub (store, n)\\r\\n | Reset         -> 0)\\r\\n\";"],"names":[],"sourceRoot":""}