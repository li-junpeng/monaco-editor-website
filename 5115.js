"use strict";(self.webpackChunkmy_application=self.webpackChunkmy_application||[]).push([[5115],{4323:(r,n,e)=>{e.r(n),e.d(n,{default:()=>o});const o="targetScope = 'subscription'\r\n\r\nparam deployStorage bool = true\r\n\r\n@description('The object ID of the principal that will get the role assignment')\r\nparam aadPrincipalId string\r\n\r\nmodule stg './storage.bicep' = if(deployStorage) {\r\n  name: 'storageDeploy'\r\n  scope: resourceGroup('another-rg') // this will target another resource group in the same subscription\r\n  params: {\r\n    storageAccountName: '<YOURUNIQUESTORAGENAME>'\r\n  }\r\n}\r\n\r\nvar contributor = 'b24988ac-6180-42a0-ab88-20f7382dd24c'\r\nresource roleDef 'Microsoft.Authorization/roleDefinitions@2018-01-01-preview' existing = {\r\n  name: contributor\r\n}\r\n\r\nresource rbac 'Microsoft.Authorization/roleAssignments@2020-04-01-preview' = {\r\n  name: guid(subscription().id, aadPrincipalId, contributor)\r\n  properties: {\r\n    roleDefinitionId: roleDef.id\r\n    principalId: aadPrincipalId\r\n  }\r\n}\r\n\r\noutput storageName array = stg.outputs.containerProps\r\n"}}]);
//# sourceMappingURL=5115.js.map