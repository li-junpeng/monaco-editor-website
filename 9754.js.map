{"version":3,"file":"9754.js","mappings":"8IAAA,ozX","sources":["file:///C:\\0-E\\Code Store\\monaco-editor\\website\\src\\website\\data\\playground-samples\\customizing-the-appearence\\exposed-colors\\sample.js"],"sourcesContent":["export default \"// The editor colors can be customized through CSS or through JS\\r\\n\\r\\nmonaco.editor.defineTheme(\\\"myTheme\\\", {\\r\\n\\tbase: \\\"vs\\\",\\r\\n\\tinherit: true,\\r\\n\\trules: [],\\r\\n\\tcolors: {\\r\\n\\t\\t\\\"editor.foreground\\\": \\\"#000000\\\",\\r\\n\\t\\t\\\"editor.background\\\": \\\"#EDF9FA\\\",\\r\\n\\t\\t\\\"editorCursor.foreground\\\": \\\"#8B0000\\\",\\r\\n\\t\\t\\\"editor.lineHighlightBackground\\\": \\\"#0000FF20\\\",\\r\\n\\t\\t\\\"editorLineNumber.foreground\\\": \\\"#008800\\\",\\r\\n\\t\\t\\\"editor.selectionBackground\\\": \\\"#88000030\\\",\\r\\n\\t\\t\\\"editor.inactiveSelectionBackground\\\": \\\"#88000015\\\",\\r\\n\\t},\\r\\n});\\r\\nmonaco.editor.setTheme(\\\"myTheme\\\");\\r\\n\\r\\nmonaco.editor.create(document.getElementById(\\\"container\\\"), {\\r\\n\\tvalue: \\\"My to-do list:\\\\n* buy milk\\\\n* buy coffee\\\\n* write awesome code\\\",\\r\\n\\tlanguage: \\\"text/plain\\\",\\r\\n\\tfontFamily: \\\"Arial\\\",\\r\\n\\tfontSize: 20,\\r\\n});\\r\\n\\r\\n// A list of color names:\\r\\n(\\\"foreground\\\"); // Overall foreground color. This color is only used if not overridden by a component.\\r\\n(\\\"errorForeground\\\"); // Overall foreground color for error messages. This color is only used if not overridden by a component.\\r\\n(\\\"descriptionForeground\\\"); // Foreground color for description text providing additional information, for example for a label.\\r\\n(\\\"focusBorder\\\"); // Overall border color for focused elements. This color is only used if not overridden by a component.\\r\\n(\\\"contrastBorder\\\"); // An extra border around elements to separate them from others for greater contrast.\\r\\n(\\\"contrastActiveBorder\\\"); // An extra border around active elements to separate them from others for greater contrast.\\r\\n(\\\"selection.background\\\"); // The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\\r\\n(\\\"textSeparator.foreground\\\"); // Color for text separators.\\r\\n(\\\"textLink.foreground\\\"); // Foreground color for links in text.\\r\\n(\\\"textLink.activeForeground\\\"); // Foreground color for active links in text.\\r\\n(\\\"textPreformat.foreground\\\"); // Foreground color for preformatted text segments.\\r\\n(\\\"textBlockQuote.background\\\"); // Background color for block quotes in text.\\r\\n(\\\"textBlockQuote.border\\\"); // Border color for block quotes in text.\\r\\n(\\\"textCodeBlock.background\\\"); // Background color for code blocks in text.\\r\\n(\\\"widget.shadow\\\"); // Shadow color of widgets such as find/replace inside the editor.\\r\\n(\\\"input.background\\\"); // Input box background.\\r\\n(\\\"input.foreground\\\"); // Input box foreground.\\r\\n(\\\"input.border\\\"); // Input box border.\\r\\n(\\\"inputOption.activeBorder\\\"); // Border color of activated options in input fields.\\r\\n(\\\"input.placeholderForeground\\\"); // Input box foreground color for placeholder text.\\r\\n(\\\"inputValidation.infoBackground\\\"); // Input validation background color for information severity.\\r\\n(\\\"inputValidation.infoBorder\\\"); // Input validation border color for information severity.\\r\\n(\\\"inputValidation.warningBackground\\\"); // Input validation background color for information warning.\\r\\n(\\\"inputValidation.warningBorder\\\"); // Input validation border color for warning severity.\\r\\n(\\\"inputValidation.errorBackground\\\"); // Input validation background color for error severity.\\r\\n(\\\"inputValidation.errorBorder\\\"); // Input validation border color for error severity.\\r\\n(\\\"dropdown.background\\\"); // Dropdown background.\\r\\n(\\\"dropdown.foreground\\\"); // Dropdown foreground.\\r\\n(\\\"dropdown.border\\\"); // Dropdown border.\\r\\n(\\\"list.focusBackground\\\"); // List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\\r\\n(\\\"list.focusForeground\\\"); // List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\\r\\n(\\\"list.activeSelectionBackground\\\"); // List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\\r\\n(\\\"list.activeSelectionForeground\\\"); // List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\\r\\n(\\\"list.inactiveSelectionBackground\\\"); // List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\\r\\n(\\\"list.inactiveSelectionForeground\\\"); // List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\\r\\n(\\\"list.hoverBackground\\\"); // List/Tree background when hovering over items using the mouse.\\r\\n(\\\"list.hoverForeground\\\"); // List/Tree foreground when hovering over items using the mouse.\\r\\n(\\\"list.dropBackground\\\"); // List/Tree drag and drop background when moving items around using the mouse.\\r\\n(\\\"list.highlightForeground\\\"); // List/Tree foreground color of the match highlights when searching inside the list/tree.\\r\\n(\\\"pickerGroup.foreground\\\"); // Quick picker color for grouping labels.\\r\\n(\\\"pickerGroup.border\\\"); // Quick picker color for grouping borders.\\r\\n(\\\"button.foreground\\\"); // Button foreground color.\\r\\n(\\\"button.background\\\"); // Button background color.\\r\\n(\\\"button.hoverBackground\\\"); // Button background color when hovering.\\r\\n(\\\"badge.background\\\"); // Badge background color. Badges are small information labels, e.g. for search results count.\\r\\n(\\\"badge.foreground\\\"); // Badge foreground color. Badges are small information labels, e.g. for search results count.\\r\\n(\\\"scrollbar.shadow\\\"); // Scrollbar shadow to indicate that the view is scrolled.\\r\\n(\\\"scrollbarSlider.background\\\"); // Slider background color.\\r\\n(\\\"scrollbarSlider.hoverBackground\\\"); // Slider background color when hovering.\\r\\n(\\\"scrollbarSlider.activeBackground\\\"); // Slider background color when active.\\r\\n(\\\"progressBar.background\\\"); // Background color of the progress bar that can show for long running operations.\\r\\n(\\\"editor.background\\\"); // Editor background color.\\r\\n(\\\"editor.foreground\\\"); // Editor default foreground color.\\r\\n(\\\"editorWidget.background\\\"); // Background color of editor widgets, such as find/replace.\\r\\n(\\\"editorWidget.border\\\"); // Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.\\r\\n(\\\"editor.selectionBackground\\\"); // Color of the editor selection.\\r\\n(\\\"editor.selectionForeground\\\"); // Color of the selected text for high contrast.\\r\\n(\\\"editor.inactiveSelectionBackground\\\"); // Color of the selection in an inactive editor.\\r\\n(\\\"editor.selectionHighlightBackground\\\"); // Color for regions with the same content as the selection.\\r\\n(\\\"editor.findMatchBackground\\\"); // Color of the current search match.\\r\\n(\\\"editor.findMatchHighlightBackground\\\"); // Color of the other search matches.\\r\\n(\\\"editor.findRangeHighlightBackground\\\"); // Color the range limiting the search.\\r\\n(\\\"editor.hoverHighlightBackground\\\"); // Highlight below the word for which a hover is shown.\\r\\n(\\\"editorHoverWidget.background\\\"); // Background color of the editor hover.\\r\\n(\\\"editorHoverWidget.border\\\"); // Border color of the editor hover.\\r\\n(\\\"editorLink.activeForeground\\\"); // Color of active links.\\r\\n(\\\"diffEditor.insertedTextBackground\\\"); // Background color for text that got inserted.\\r\\n(\\\"diffEditor.removedTextBackground\\\"); // Background color for text that got removed.\\r\\n(\\\"diffEditor.insertedTextBorder\\\"); // Outline color for the text that got inserted.\\r\\n(\\\"diffEditor.removedTextBorder\\\"); // Outline color for text that got removed.\\r\\n(\\\"editorOverviewRuler.currentContentForeground\\\"); // Current overview ruler foreground for inline merge-conflicts.\\r\\n(\\\"editorOverviewRuler.incomingContentForeground\\\"); // Incoming overview ruler foreground for inline merge-conflicts.\\r\\n(\\\"editorOverviewRuler.commonContentForeground\\\"); // Common ancestor overview ruler foreground for inline merge-conflicts.\\r\\n(\\\"editor.lineHighlightBackground\\\"); // Background color for the highlight of line at the cursor position.\\r\\n(\\\"editor.lineHighlightBorder\\\"); // Background color for the border around the line at the cursor position.\\r\\n(\\\"editor.rangeHighlightBackground\\\"); // Background color of highlighted ranges, like by quick open and find features.\\r\\n(\\\"editorCursor.foreground\\\"); // Color of the editor cursor.\\r\\n(\\\"editorWhitespace.foreground\\\"); // Color of whitespace characters in the editor.\\r\\n(\\\"editorIndentGuide.background\\\"); // Color of the editor indentation guides.\\r\\n(\\\"editorLineNumber.foreground\\\"); // Color of editor line numbers.\\r\\n(\\\"editorLineNumber.activeForeground\\\"); // Color of editor active line number.\\r\\n(\\\"editorRuler.foreground\\\"); // Color of the editor rulers.\\r\\n(\\\"editorCodeLens.foreground\\\"); // Foreground color of editor code lenses\\r\\n(\\\"editorInlayHint.foreground\\\"); // Foreground color of editor inlay hints\\r\\n(\\\"editorInlayHint.background\\\"); // Background color of editor inlay hints\\r\\n(\\\"editorBracketMatch.background\\\"); // Background color behind matching brackets\\r\\n(\\\"editorBracketMatch.border\\\"); // Color for matching brackets boxes\\r\\n(\\\"editorOverviewRuler.border\\\"); // Color of the overview ruler border.\\r\\n(\\\"editorGutter.background\\\"); // Background color of the editor gutter. The gutter contains the glyph margins and the line numbers.\\r\\n(\\\"editorError.foreground\\\"); // Foreground color of error squigglies in the editor.\\r\\n(\\\"editorError.border\\\"); // Border color of error squigglies in the editor.\\r\\n(\\\"editorWarning.foreground\\\"); // Foreground color of warning squigglies in the editor.\\r\\n(\\\"editorWarning.border\\\"); // Border color of warning squigglies in the editor.\\r\\n(\\\"editorMarkerNavigationError.background\\\"); // Editor marker navigation widget error color.\\r\\n(\\\"editorMarkerNavigationWarning.background\\\"); // Editor marker navigation widget warning color.\\r\\n(\\\"editorMarkerNavigation.background\\\"); // Editor marker navigation widget background.\\r\\n(\\\"editorSuggestWidget.background\\\"); // Background color of the suggest widget.\\r\\n(\\\"editorSuggestWidget.border\\\"); // Border color of the suggest widget.\\r\\n(\\\"editorSuggestWidget.foreground\\\"); // Foreground color of the suggest widget.\\r\\n(\\\"editorSuggestWidget.selectedBackground\\\"); // Background color of the selected entry in the suggest widget.\\r\\n(\\\"editorSuggestWidget.highlightForeground\\\"); // Color of the match highlights in the suggest widget.\\r\\n(\\\"editor.wordHighlightBackground\\\"); // Background color of a symbol during read-access, like reading a variable.\\r\\n(\\\"editor.wordHighlightStrongBackground\\\"); // Background color of a symbol during write-access, like writing to a variable.\\r\\n(\\\"peekViewTitle.background\\\"); // Background color of the peek view title area.\\r\\n(\\\"peekViewTitleLabel.foreground\\\"); // Color of the peek view title.\\r\\n(\\\"peekViewTitleDescription.foreground\\\"); // Color of the peek view title info.\\r\\n(\\\"peekView.border\\\"); // Color of the peek view borders and arrow.\\r\\n(\\\"peekViewResult.background\\\"); // Background color of the peek view result list.\\r\\n(\\\"peekViewResult.lineForeground\\\"); // Foreground color for line nodes in the peek view result list.\\r\\n(\\\"peekViewResult.fileForeground\\\"); // Foreground color for file nodes in the peek view result list.\\r\\n(\\\"peekViewResult.selectionBackground\\\"); // Background color of the selected entry in the peek view result list.\\r\\n(\\\"peekViewResult.selectionForeground\\\"); // Foreground color of the selected entry in the peek view result list.\\r\\n(\\\"peekViewEditor.background\\\"); // Background color of the peek view editor.\\r\\n(\\\"peekViewEditorGutter.background\\\"); // Background color of the gutter in the peek view editor.\\r\\n(\\\"peekViewResult.matchHighlightBackground\\\"); // Match highlight color in the peek view result list.\\r\\n(\\\"peekViewEditor.matchHighlightBackground\\\"); // Match highlight color in the peek view editor.\\r\\n\\r\\n/*\\r\\nvar colors = require('vs/platform/registry/common/platform').Registry.data.get('base.contributions.colors').colorSchema.properties\\r\\nObject.keys(colors).forEach(function(key) {\\r\\n    var val = colors[key];\\r\\n    console.log( '//' + val.description + '\\\\n' + key);\\r\\n})\\r\\n*/\\r\\n\";"],"names":[],"sourceRoot":""}