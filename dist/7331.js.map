{"version":3,"file":"7331.js","mappings":"8IAAA,+7E","sources":["file:///C:\\0-E\\Code Store\\monaco-editor\\website\\src\\website\\data\\playground-samples\\extending-language-services\\completion-provider-example\\sample.js"],"sourcesContent":["export default \"function createDependencyProposals(range) {\\r\\n\\t// returning a static list of proposals, not even looking at the prefix (filtering is done by the Monaco editor),\\r\\n\\t// here you could do a server side lookup\\r\\n\\treturn [\\r\\n\\t\\t{\\r\\n\\t\\t\\tlabel: '\\\"lodash\\\"',\\r\\n\\t\\t\\tkind: monaco.languages.CompletionItemKind.Function,\\r\\n\\t\\t\\tdocumentation: \\\"The Lodash library exported as Node.js modules.\\\",\\r\\n\\t\\t\\tinsertText: '\\\"lodash\\\": \\\"*\\\"',\\r\\n\\t\\t\\trange: range,\\r\\n\\t\\t},\\r\\n\\t\\t{\\r\\n\\t\\t\\tlabel: '\\\"express\\\"',\\r\\n\\t\\t\\tkind: monaco.languages.CompletionItemKind.Function,\\r\\n\\t\\t\\tdocumentation: \\\"Fast, unopinionated, minimalist web framework\\\",\\r\\n\\t\\t\\tinsertText: '\\\"express\\\": \\\"*\\\"',\\r\\n\\t\\t\\trange: range,\\r\\n\\t\\t},\\r\\n\\t\\t{\\r\\n\\t\\t\\tlabel: '\\\"mkdirp\\\"',\\r\\n\\t\\t\\tkind: monaco.languages.CompletionItemKind.Function,\\r\\n\\t\\t\\tdocumentation: \\\"Recursively mkdir, like <code>mkdir -p</code>\\\",\\r\\n\\t\\t\\tinsertText: '\\\"mkdirp\\\": \\\"*\\\"',\\r\\n\\t\\t\\trange: range,\\r\\n\\t\\t},\\r\\n\\t\\t{\\r\\n\\t\\t\\tlabel: '\\\"my-third-party-library\\\"',\\r\\n\\t\\t\\tkind: monaco.languages.CompletionItemKind.Function,\\r\\n\\t\\t\\tdocumentation: \\\"Describe your library here\\\",\\r\\n\\t\\t\\tinsertText: '\\\"${1:my-third-party-library}\\\": \\\"${2:1.2.3}\\\"',\\r\\n\\t\\t\\tinsertTextRules:\\r\\n\\t\\t\\t\\tmonaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\\r\\n\\t\\t\\trange: range,\\r\\n\\t\\t},\\r\\n\\t];\\r\\n}\\r\\n\\r\\nmonaco.languages.registerCompletionItemProvider(\\\"json\\\", {\\r\\n\\tprovideCompletionItems: function (model, position) {\\r\\n\\t\\t// find out if we are completing a property in the 'dependencies' object.\\r\\n\\t\\tvar textUntilPosition = model.getValueInRange({\\r\\n\\t\\t\\tstartLineNumber: 1,\\r\\n\\t\\t\\tstartColumn: 1,\\r\\n\\t\\t\\tendLineNumber: position.lineNumber,\\r\\n\\t\\t\\tendColumn: position.column,\\r\\n\\t\\t});\\r\\n\\t\\tvar match = textUntilPosition.match(\\r\\n\\t\\t\\t/\\\"dependencies\\\"\\\\s*:\\\\s*\\\\{\\\\s*(\\\"[^\\\"]*\\\"\\\\s*:\\\\s*\\\"[^\\\"]*\\\"\\\\s*,\\\\s*)*([^\\\"]*)?$/\\r\\n\\t\\t);\\r\\n\\t\\tif (!match) {\\r\\n\\t\\t\\treturn { suggestions: [] };\\r\\n\\t\\t}\\r\\n\\t\\tvar word = model.getWordUntilPosition(position);\\r\\n\\t\\tvar range = {\\r\\n\\t\\t\\tstartLineNumber: position.lineNumber,\\r\\n\\t\\t\\tendLineNumber: position.lineNumber,\\r\\n\\t\\t\\tstartColumn: word.startColumn,\\r\\n\\t\\t\\tendColumn: word.endColumn,\\r\\n\\t\\t};\\r\\n\\t\\treturn {\\r\\n\\t\\t\\tsuggestions: createDependencyProposals(range),\\r\\n\\t\\t};\\r\\n\\t},\\r\\n});\\r\\n\\r\\nmonaco.editor.create(document.getElementById(\\\"container\\\"), {\\r\\n\\tvalue: '{\\\\n\\\\t\\\"dependencies\\\": {\\\\n\\\\t\\\\t\\\\n\\\\t}\\\\n}\\\\n',\\r\\n\\tlanguage: \\\"json\\\",\\r\\n});\\r\\n\";"],"names":[],"sourceRoot":""}