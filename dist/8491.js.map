{"version":3,"file":"8491.js","mappings":"8IAAA,+kD","sources":["file:///C:\\0-E\\Code Store\\monaco-editor\\website\\src\\website\\data\\home-samples\\sample.aes.txt"],"sourcesContent":["export default \"// Contract simulating developers organization\\r\\ncontract HackBG =\\r\\n\\r\\n    record state = { developers: map(address, developer) }\\r\\n\\r\\n    record developer = { name: string\\r\\n                       , age: int\\r\\n                       , skillset: map(skill, experience) }\\r\\n\\r\\n    type skill = string\\r\\n    type experience = int\\r\\n\\r\\n    datatype event =\\r\\n          LogDeveloperAdded(indexed address, indexed int, string)\\r\\n\\r\\n    entrypoint init() : state = { developers = {} }\\r\\n\\r\\n    stateful entrypoint dev_add(account: address, dev_name: string, dev_age: int) =\\r\\n        require(!is_member(account), \\\"ERROR_DEVELOPER_ALREADY_EXISTS\\\")\\r\\n        let dev : developer = { name = dev_name\\r\\n                              , age = dev_age\\r\\n                              , skillset = {} }\\r\\n        put(state{ developers[account] = dev })\\r\\n        Chain.event(LogDeveloperAdded(account, Chain.timestamp, dev_name))\\r\\n\\r\\n    stateful entrypoint dev_update(account: address, dev_name: string, dev_age: int) =\\r\\n        require(is_member(account), \\\"ERROR_DEVELOPER_DOES_NOT_EXIST\\\")\\r\\n        put(state{ developers[account].name = dev_name })\\r\\n        put(state{ developers[account].age = dev_age })\\r\\n\\r\\n    function is_member(account: address) : bool =\\r\\n        Map.member(account, state.developers)\\r\\n\\r\\n    stateful entrypoint dev_skill_modify(account: address, skill: string, experience: int) =\\r\\n        put(state{ developers[account].skillset[skill] = experience })\\r\\n\\r\\n    entrypoint dev_get(account: address) : developer =\\r\\n        state.developers[account]\";"],"names":[],"sourceRoot":""}