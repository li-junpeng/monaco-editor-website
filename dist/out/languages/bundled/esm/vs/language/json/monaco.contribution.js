/*! For license information please see monaco.contribution.js.LICENSE.txt */
var __defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__hasOwnProp=Object.prototype.hasOwnProperty,__copyProps=(e,o,t,n)=>{if(o&&"object"==typeof o||"function"==typeof o)for(let s of __getOwnPropNames(o))__hasOwnProp.call(e,s)||s===t||__defProp(e,s,{get:()=>o[s],enumerable:!(n=__getOwnPropDesc(o,s))||n.enumerable});return e},__reExport=(e,o,t)=>(__copyProps(e,o,"default"),t&&__copyProps(t,o,"default")),monaco_editor_core_exports={};__reExport(monaco_editor_core_exports,monaco_editor_core_star);import*as monaco_editor_core_star from"monaco-editor-core";var LanguageServiceDefaultsImpl=class{_onDidChange=new monaco_editor_core_exports.Emitter;_diagnosticsOptions;_modeConfiguration;_languageId;constructor(e,o,t){this._languageId=e,this.setDiagnosticsOptions(o),this.setModeConfiguration(t)}get onDidChange(){return this._onDidChange.event}get languageId(){return this._languageId}get modeConfiguration(){return this._modeConfiguration}get diagnosticsOptions(){return this._diagnosticsOptions}setDiagnosticsOptions(e){this._diagnosticsOptions=e||Object.create(null),this._onDidChange.fire(this)}setModeConfiguration(e){this._modeConfiguration=e||Object.create(null),this._onDidChange.fire(this)}},diagnosticDefault={validate:!0,allowComments:!0,schemas:[],enableSchemaRequest:!1,schemaRequest:"warning",schemaValidation:"warning",comments:"error",trailingCommas:"error"},modeConfigurationDefault={documentFormattingEdits:!0,documentRangeFormattingEdits:!0,completionItems:!0,hovers:!0,documentSymbols:!0,tokens:!0,colors:!0,foldingRanges:!0,diagnostics:!0,selectionRanges:!0},jsonDefaults=new LanguageServiceDefaultsImpl("json",diagnosticDefault,modeConfigurationDefault);function getMode(){return import("./jsonMode")}monaco_editor_core_exports.languages.json={jsonDefaults},monaco_editor_core_exports.languages.register({id:"json",extensions:[".json",".bowerrc",".jshintrc",".jscsrc",".eslintrc",".babelrc",".har"],aliases:["JSON","json"],mimetypes:["application/json"]}),monaco_editor_core_exports.languages.onLanguage("json",(()=>{getMode().then((e=>e.setupMode(jsonDefaults)))}));export{jsonDefaults};