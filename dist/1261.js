"use strict";(self.webpackChunkmy_application=self.webpackChunkmy_application||[]).push([[1261],{1261:(t,n,e)=>{e.r(n),e.d(n,{default:()=>r});const r='function validate(model) {\r\n\tconst markers = [];\r\n\t// lines start at 1\r\n\tfor (let i = 1; i < model.getLineCount() + 1; i++) {\r\n\t\tconst range = {\r\n\t\t\tstartLineNumber: i,\r\n\t\t\tstartColumn: 1,\r\n\t\t\tendLineNumber: i,\r\n\t\t\tendColumn: model.getLineLength(i) + 1,\r\n\t\t};\r\n\t\tconst content = model.getValueInRange(range).trim();\r\n\t\tconst number = Number(content);\r\n\t\tif (Number.isNaN(number)) {\r\n\t\t\tmarkers.push({\r\n\t\t\t\tmessage: "not a number",\r\n\t\t\t\tseverity: monaco.MarkerSeverity.Error,\r\n\t\t\t\tstartLineNumber: range.startLineNumber,\r\n\t\t\t\tstartColumn: range.startColumn,\r\n\t\t\t\tendLineNumber: range.endLineNumber,\r\n\t\t\t\tendColumn: range.endColumn,\r\n\t\t\t});\r\n\t\t} else if (!Number.isInteger(number)) {\r\n\t\t\tmarkers.push({\r\n\t\t\t\tmessage: "not an integer",\r\n\t\t\t\tseverity: monaco.MarkerSeverity.Warning,\r\n\t\t\t\tstartLineNumber: range.startLineNumber,\r\n\t\t\t\tstartColumn: range.startColumn,\r\n\t\t\t\tendLineNumber: range.endLineNumber,\r\n\t\t\t\tendColumn: range.endColumn,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tmonaco.editor.setModelMarkers(model, "owner", markers);\r\n}\r\n\r\nconst value = `12345\r\nabcd\r\n234.56\r\n12345\r\nabcd\r\n234.56`;\r\nconst uri = monaco.Uri.parse("inmemory://test");\r\nconst model = monaco.editor.createModel(value, "demoLanguage", uri);\r\nconst editor = monaco.editor.create(document.getElementById("container"), {\r\n\tmodel,\r\n});\r\nvalidate(model);\r\nmodel.onDidChangeContent(() => {\r\n\tvalidate(model);\r\n});\r\n'}}]);
//# sourceMappingURL=1261.js.map