"use strict";(self.webpackChunkmy_application=self.webpackChunkmy_application||[]).push([[8470],{8470:(t,n,r)=>{r.r(n),r.d(n,{default:()=>e});const e='// Add additional d.ts files to the JavaScript language service and change.\r\n// Also change the default compilation options.\r\n// The sample below shows how a class Facts is declared and introduced\r\n// to the system and how the compiler is told to use ES6 (target=2).\r\n\r\n// validation settings\r\nmonaco.languages.typescript.javascriptDefaults.setDiagnosticsOptions({\r\n\tnoSemanticValidation: true,\r\n\tnoSyntaxValidation: false,\r\n});\r\n\r\n// compiler options\r\nmonaco.languages.typescript.javascriptDefaults.setCompilerOptions({\r\n\ttarget: monaco.languages.typescript.ScriptTarget.ES2015,\r\n\tallowNonTsExtensions: true,\r\n});\r\n\r\n// extra libraries\r\nvar libSource = [\r\n\t"declare class Facts {",\r\n\t"    /**",\r\n\t"     * Returns the next fact",\r\n\t"     */",\r\n\t"    static next():string",\r\n\t"}",\r\n].join("\\n");\r\nvar libUri = "ts:filename/facts.d.ts";\r\nmonaco.languages.typescript.javascriptDefaults.addExtraLib(libSource, libUri);\r\n// When resolving definitions and references, the editor will try to use created models.\r\n// Creating a model for the library allows "peek definition/references" commands to work with the library.\r\nmonaco.editor.createModel(libSource, "typescript", monaco.Uri.parse(libUri));\r\n\r\nvar jsCode = [\r\n\t\'"use strict";\',\r\n\t"",\r\n\t"class Chuck {",\r\n\t"    greet() {",\r\n\t"        return Facts.next();",\r\n\t"    }",\r\n\t"}",\r\n].join("\\n");\r\n\r\nmonaco.editor.create(document.getElementById("container"), {\r\n\tvalue: jsCode,\r\n\tlanguage: "javascript",\r\n});\r\n'}}]);
//# sourceMappingURL=8470.js.map