{"version":3,"file":"721.js","mappings":"4IAAA,i0D","sources":["file:///C:\\0-E\\Code Store\\monaco-editor\\website\\src\\website\\data\\playground-samples\\interacting-with-the-editor\\adding-a-keybinding-to-an-existing-command\\sample.js"],"sourcesContent":["export default \"// Explanation:\\r\\n// First, we need to know the ID of the command.\\r\\n// If you know the default key bindings, you can get the ID by following these steps.\\r\\n// 1. open Visual Studio Code and navigate to \\\"Preferences => Keyboard Shortcuts\\\".\\r\\n// 2. enter a shortcut key (e.g. Tab, Escape, Enter, etc.) in the search text input at the top.\\r\\n// 3. Once the commands are filtered, you will need to find which command is the target command by ID and name.\\r\\n\\r\\n// In this sample, the cursor can be moved with the Ctrl key and HJKL.\\r\\n// To move the cursor to the left, we usually use the LeftArrow key, so we type `LeftArrow` in the search form.\\r\\n// You will see a number of commands, but you will find the most likely one, `cursorLeft`.\\r\\n// Note that the `When` column says `textInputFocus`.\\r\\n// In a similar fashion, you will find the commands `cursorDown`, `cursorUp`, and `cursorRight`.\\r\\n\\r\\nmonaco.editor.addKeybindingRules([\\r\\n\\t{\\r\\n\\t\\tkeybinding: monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyH,\\r\\n\\t\\tcommand: \\\"cursorLeft\\\", // ID\\r\\n\\t\\twhen: \\\"textInputFocus\\\", // When\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tkeybinding: monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyJ,\\r\\n\\t\\tcommand: \\\"cursorDown\\\",\\r\\n\\t\\twhen: \\\"textInputFocus\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tkeybinding: monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyK,\\r\\n\\t\\tcommand: \\\"cursorUp\\\",\\r\\n\\t\\twhen: \\\"textInputFocus\\\",\\r\\n\\t},\\r\\n\\t{\\r\\n\\t\\tkeybinding: monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyL,\\r\\n\\t\\tcommand: \\\"cursorRight\\\",\\r\\n\\t\\twhen: \\\"textInputFocus\\\",\\r\\n\\t},\\r\\n]);\\r\\n\\r\\nmonaco.editor.create(document.getElementById(\\\"container\\\"), {\\r\\n\\tvalue: [\\r\\n\\t\\t\\\"\\\",\\r\\n\\t\\t\\\"class Example {\\\",\\r\\n\\t\\t\\\"\\\\tprivate m:number;\\\",\\r\\n\\t\\t\\\"\\\",\\r\\n\\t\\t\\\"\\\\tpublic met(): string {\\\",\\r\\n\\t\\t'\\\\t\\\\treturn \\\"Hello world!\\\";',\\r\\n\\t\\t\\\"\\\\t}\\\",\\r\\n\\t\\t\\\"}\\\",\\r\\n\\t].join(\\\"\\\\n\\\"),\\r\\n\\tlanguage: \\\"typescript\\\",\\r\\n});\\r\\n\";"],"names":[],"sourceRoot":""}